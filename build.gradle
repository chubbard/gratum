
description = """
A lightweight standalone ETL engine for groovy.  Gratum is groovy + datum.
"""

allprojects {
    apply plugin: "groovy"
    apply plugin: "maven-publish"
    apply plugin: "signing"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = 'com.github.chubbard'
//version = '1.1.6'
    version = '1.2.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation('org.codehaus.groovy:groovy-all:2.5.23') {
            exclude group: 'org.codehaus.groovy', module:'groovy-swing'
            exclude group: 'org.codehaus.groovy', module:'groovy-testng'
            exclude group: 'org.codehaus.groovy', module:'groovy-console'
            exclude group: 'org.codehaus.groovy', module:'groovy-docgenerator'
            exclude group: 'org.codehaus.groovy', module:'groovy-ant'
//        exclude group: 'org.codehaus.groovy', module:'groovy-groovydoc'
            exclude group: 'org.codehaus.groovy', module:'groovy-groovysh'
        }

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'

    }

    jar {
        baseName = "gratum-${project.name}"
        description = project.description
    }

    tasks.register("sourceJar", Jar) {
        classifier 'sources'
        baseName = "gratum-${project.name}"
        from sourceSets.main.allSource
    }

    tasks.register("javadocJar", Jar ) {
        dependsOn("javadoc")
        classifier 'javadoc'
        archivesBaseName = "gratum-${project.name}"
        from javadoc.destinationDir
    }

    tasks.register('groovydocJar', Jar) {
        dependsOn groovydoc
        classifier 'groovydoc'
        archivesBaseName = "gratum-${project.name}"
        from groovydoc.destinationDir
    }

    artifacts {
        archives jar
        archives javadocJar
        archives groovydocJar
        archives sourceJar
    }

    signing {
//    //sign publishing.publications.maven
        required { !version.endsWith("SNAPSHOT") && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    publishing {

        repositories {
            maven {
                url project.version.endsWith('-SNAPSHOT') ? "https://oss.sonatype.org/content/repositories/snapshots/" : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username System.getenv("sonatypeUsername") ?: sonatypeUsername
                    password System.getenv("sonatypePassword") ?: sonatypePassword
                }
            }
            mavenLocal()
        }
    }

//    model {
//        println("${project.name}")
//        tasks.generatePomFileForGratumPublication {
//            destination = file("$buildDir/generated-pom.xml")
//        }
//
//        tasks.publishGratumPublicationToMavenLocal {
//            dependsOn project.tasks.signArchives
//        }
//        tasks.publishGratumPublicationToMavenRepository {
//            dependsOn project.tasks.signArchives
//        }
//    }
}

tasks.named('wrapper') {
    gradleVersion = '5.6.4'
}
